{"version":3,"sources":["assets/27.1 burger-logo.png.png","components/burgerbuilder/burgercontrols/burgercontrols.module.css","store/action/auth.js","store/action/actionType.js","components/navigation/navigation.js","store/action/burgerBuilder.js","components/theme/theme.js","components/burgerbuilder/burgercontrols/burgercontrols.js","components/burgerbuilder/modal/modal.js","components/burgerbuilder/Loader/Loader.js","components/burgerbuilder/contact/contact.js","components/burgerbuilder/ingredients/ingredients.js","components/burgerbuilder/burger/burger.js","components/burgerbuilder/burgerbuilder.js","components/orderpage/order/order.js","store/action/order.js","components/auth/signupform/signupform.js","components/auth/auth.js","App.js","serviceWorker.js","store/reducer/burgerBuilder.js","store/reducer/order.js","store/reducer/auth.js","index.js","components/burgerbuilder/burger/burger.module.css","components/burgerbuilder/ingredients/ingredients.module.css"],"names":["module","exports","authInSuccess","token","id","type","authFailed","error","logout","localStorage","removeItem","connect","state","auth","isAuth","drawer","burgerBuilder","dispatch","openDrawer","closeDrawer","props","classes","makeStyles","theme","burgerIcon","height","tab","minWidth","opacity","tabs","marginLeft","backgroundColor","palette","common","lightBrown","selected","background","brown","useStyles","useTheme","match","useMediaQuery","breakpoints","down","useState","index","setIndex","setLogout","drawerIndex","setDrawerIndex","useEffect","window","location","pathname","authRedirect","to","Fragment","SwipeableDrawer","open","paper","onOpen","onClose","List","onClick","ListItem","style","padding","borderRadius","src","alt","className","marginTop","color","button","divider","component","Link","ListItemIcon","ListItemText","toggle","IconButton","width","Tabs","value","onChange","event","Tab","label","display","flexDirection","AppBar","position","Toolbar","createMuiTheme","primary","main","secondary","loginMessage","loginTip","openMessage","closeMessage","wrapper","fontWeight","price","toFixed","Grid","container","margin","alignItems","justify","item","marginRight","direction","spacing","Button","variant","addSalad","addCheese","addBacon","addMeat","removeSalad","disabled","disable","removeCheese","removeBacon","removeMeat","openModal","Snackbar","anchorOrigin","horizontal","vertical","autoHideDuration","Alert","severity","Modal","Dialog","closeModal","textAlign","fullWidth","DialogTitle","marginBottom","salad","cheese","meat","bacon","borderColor","openContact","root","CircularIndeterminate","justifyContent","paddingTop","CircularProgress","ing","ingredients","loading","totalPrice","sendOrder","orderData","axios","post","then","response","sendOrderSuccess","data","catch","action","method","setMethod","name","setName","email","setEmail","street","setStreet","zipcode","setZipcode","country","setCountry","customerData","content","DialogContent","TextField","target","console","log","Select","MenuItem","closeContact","Ingredients","Salad","Meat","Cheese","Bacon","PropType","string","isRequired","Burger","ingredient","Object","keys","map","igKey","Array","_","key","reduce","arr","el","concat","length","CssBaseline","BreadTop","Seeds1","Seeds2","BreadBottom","Burgerbuilder","this","fetchIngredients","mainPage","openContactF","closeContactF","Component","get","order","fetchOrder","push","fetchOrderSuccess","TableContainer","Paper","Table","TableBody","TableRow","TableCell","successMessage","closeForm","authUp","password","authData","returnSecureToken","setPassword","Typography","DialogContentText","autoFocus","maxWidth","avatar","form","submit","openError","backDrop","openBackDrop","authIn","setItem","idToken","localId","openForm","closeLoginMessage","closeErrorMessage","closeLoginTip","errorMessage","message","Container","Avatar","noValidate","required","autoComplete","FormControlLabel","control","Checkbox","xs","href","Backdrop","zIndex","App","autoLogin","ThemeProvider","path","Auth","Order","getItem","Boolean","hostname","initialState","ingredientsPrice","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4c650f80.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/27.1 burger-logo.png.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"burgercontrols_wrapper__P4jjK\",\"margin\":\"burgercontrols_margin__lsiT_\",\"font\":\"burgercontrols_font__3Z-5Q\"};","import * as actionType from './actionType'\r\nimport axios from 'axios'\r\n\r\nexport const authUpStart=()=>{\r\n    return{\r\n        type:actionType.AUTH_UP_START\r\n    }\r\n}\r\n\r\nexport const authInStart=()=>{\r\n    return{\r\n        type:actionType.AUTH_IN_START\r\n    }\r\n}\r\n\r\nexport const authUpSuccess=()=>{\r\n    return{\r\n        type:actionType.AUTH_UP_SUCCESS\r\n    }\r\n}\r\n\r\nexport const authInSuccess=(token,id)=>{\r\n    return{\r\n        type:actionType.AUTH_IN_SUCCESS,\r\n        token:token,\r\n        id:id\r\n    }\r\n}\r\n\r\nexport const authFailed=(error)=>{\r\n    return{\r\n        type:actionType.AUTH_FAILED,\r\n        error:error\r\n    }\r\n}\r\n\r\nexport const openSignupForm=()=>{\r\n    return{\r\n        type:actionType.OPEN_SIGNUP_FROM\r\n    }\r\n}\r\n\r\nexport const closeSignupForm=()=>{\r\n    return{\r\n        type:actionType.CLOSE_SIGNUP_FROM\r\n    }\r\n}\r\n\r\nexport const closeSuccessMessage=()=>{\r\n    return{\r\n        type:actionType.CLOSE_MESSAGE\r\n    }\r\n}\r\n\r\nexport const closeLoginMessage=()=>{\r\n    return{\r\n        type:actionType.CLOSE_MESSAGE\r\n    }\r\n}\r\n\r\nexport const closeErrorMessage=()=>{\r\n    return{\r\n        type:actionType.CLOSE_ERROR_MESSAGE\r\n    }\r\n}\r\n\r\nexport const logout=()=>{\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('id')\r\n    return{\r\n        type:actionType.LOGOUT\r\n    }\r\n}\r\n\r\nexport const authUp=(email,password)=>{\r\n    const authData={\r\n        email:email,\r\n        password:password,\r\n        returnSecureToken:true\r\n    }\r\n    return (dispatch)=>{\r\n        dispatch(authUpStart())\r\n        axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAN-tsoji2NFKt1jB1PDLOx6SG9JKY6Omg',authData).then((response)=>{\r\n            dispatch(authUpSuccess(response.data))\r\n        }).catch((error)=>{\r\n            dispatch(authFailed(error.response.data.error))\r\n        })\r\n    }\r\n}\r\n\r\nexport const authIn=(email,password)=>{\r\n    const authData={\r\n        email:email,\r\n        password:password,\r\n        returnSecureToken:true\r\n    }\r\n    return (dispatch)=>{\r\n        dispatch(authInStart())\r\n        axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAN-tsoji2NFKt1jB1PDLOx6SG9JKY6Omg',authData).then((response)=>{\r\n            localStorage.setItem('token',response.data.idToken)\r\n            localStorage.setItem('id',response.data.localId)\r\n            dispatch(authInSuccess(response.data.idToken,response.data.localId))\r\n        }).catch((error)=>{\r\n            dispatch(authFailed(error.response.data.error))\r\n        })\r\n    }\r\n}\r\n\r\nexport const autoLogin=()=>{\r\n    return(dispatch)=>{\r\n        const token=localStorage.getItem('token')\r\n        if(!token){\r\n            dispatch(logout())\r\n        }else{\r\n            const id=localStorage.getItem('id')\r\n            dispatch(authInSuccess(token,id))\r\n        }\r\n    }\r\n}","export const ADD_MEAT='ADD_MEAT'\r\nexport const ADD_CHEESE='ADD_CHEESE'\r\nexport const ADD_SALAD='ADD_SALAD'\r\nexport const ADD_BACON='ADD_BACON'\r\nexport const REMOVE_MEAT='REMOVE_MEAT'\r\nexport const REMOVE_CHEESE='REMOVE_CHEESE'\r\nexport const REMOVE_SALAD='REMOVE_SALAD'\r\nexport const REMOVE_BACON='REMOVE_BACON'\r\nexport const FETCH_INGREDIENTS_SUCCESS='FETCH_INGREDIENTS_SUCCESS'\r\nexport const FETCH_INGREDIENTS_FAILED='FETCH_INGREDIENTS_FAILED'\r\nexport const LOGIN_MESSAGE='LOGIN_MESSAGE'\r\nexport const CLOSE_LOGIN_MESSAGE='CLOSE_LOGIN_MESSAGE'\r\n\r\nexport const OPEN_CONTACT='OPEN_CONTACT'\r\nexport const CLOSE_CONTACT='CLOSE_CONTACT'\r\nexport const OPEN_MODAL='OPEN_MODAL'\r\nexport const CLOSE_MODAL='CLOSE_MODAL'\r\nexport const CLOSE_MESSAGE='CLOSE_MESSAGE'\r\n\r\nexport const SEND_ORDER_START='SEND_ORDER_START'\r\nexport const SEND_ORDER_SUCCESS='SEND_ORDER_SUCCESS'\r\nexport const SEND_ORDER_FAILED='SEND_ORDER_FAILED'\r\nexport const FETCH_ORDER_START='FETCH_ORDER_START'\r\nexport const FETCH_ORDER_SUCCESS='FETCH_ORDER_SUCCESS'\r\nexport const FETCH_ORDER_FAILED='FETCH_ORDER_FAILED'\r\n\r\nexport const AUTH_UP_START='AUTH_UP_START'\r\nexport const AUTH_IN_START='AUTH_IN_START'\r\nexport const AUTH_UP_SUCCESS='AUTH_UP_SUCCESS'\r\nexport const AUTH_IN_SUCCESS='AUTH_IN_SUCCESS'\r\nexport const AUTH_FAILED='AUTH_FAILED'\r\nexport const OPEN_SIGNUP_FROM='OPEN_SIGNUP_FROM'\r\nexport const CLOSE_SIGNUP_FROM='CLOSE_SIGNUP_FROM'\r\nexport const CLOSE_ERROR_MESSAGE='CLOSE_ERROR_MESSAGE'\r\nexport const LOGOUT='LOGOUT'\r\n\r\nexport const OPEN_DRAWER='OPEN_DRAWER'\r\nexport const CLOSE_DRAWER='CLOSE_DRAWER'","import React from 'react';\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport burgerIcon from '../../assets/27.1 burger-logo.png.png'\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport {Link} from 'react-router-dom'\r\nimport {useState,useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {logout} from \"../../store/action\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport * as action from '../../store/action/index'\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport List from \"@material-ui/core/List\";\r\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\n\r\nfunction Navigation(props) {\r\n    const useStyles=makeStyles((theme)=>{\r\n        return{\r\n            burgerIcon:{\r\n                height:'50px',\r\n            },\r\n            tab:{\r\n                minWidth:'3em',\r\n                opacity:1,\r\n                height:'64px'\r\n            },\r\n            tabs:{\r\n                marginLeft:'auto',\r\n            },\r\n            drawer:{\r\n                backgroundColor:theme.palette.common.lightBrown\r\n            },\r\n            selected:{\r\n                background:theme.palette.common.brown\r\n            }\r\n        }\r\n    })\r\n    const classes=useStyles()\r\n    const theme=useTheme()\r\n    const match=useMediaQuery(theme.breakpoints.down('xs'))\r\n    const [index,setIndex]=useState(0)\r\n    const [logout,setLogout]=useState(false)\r\n    const [drawerIndex,setDrawerIndex]=useState(0)\r\n    const changeHandler=(event,index)=>{\r\n        setIndex(index)\r\n    }\r\n    const logoutHandler=()=>{\r\n        setLogout(true)\r\n    }\r\n    const redirectHandler=()=>{\r\n        setLogout(false)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(window.location.pathname==='/orders'){\r\n            setIndex(1)\r\n            setDrawerIndex(1)\r\n        }else if(window.location.pathname==='/auth' && props.token){\r\n            setIndex(2)\r\n        }else if(window.location.pathname==='/auth' && !props.token){\r\n            setIndex(1)\r\n            setDrawerIndex(2)\r\n        }else if(window.location.pathname==='/'){\r\n            setIndex(0)\r\n            setDrawerIndex(0)\r\n        }\r\n    },[props.token])\r\n\r\n    let authRedirect=null\r\n    if(props.isAuth && window.location.pathname==='/auth'){\r\n        authRedirect=<Redirect to={'/'}/>\r\n    }else if(window.location.pathname==='/' && !props.isAuth && logout){\r\n        authRedirect=<Redirect to={'/auth'}/>\r\n    }else if(window.location.pathname==='/orders' && !props.isAuth){\r\n        authRedirect=<Redirect to={'/auth'}/>\r\n    }\r\n\r\n    const drawer=<React.Fragment>\r\n        <SwipeableDrawer open={props.drawer} classes={{paper:classes.drawer}} onOpen={props.openDrawer} onClose={props.closeDrawer}>\r\n            <List onClick={props.closeDrawer}>\r\n                <ListItem>\r\n                    <div style={{height:'60px',padding:'3px',backgroundColor:'white',borderRadius:'5px'}}>\r\n                        <img src={burgerIcon} alt=\"burger-icon\" className={classes.burgerIcon}/>\r\n                    </div>\r\n                </ListItem>\r\n                <ListItem style={{marginTop:'2.5em',height:'5em',color:'white'}}\r\n                          button\r\n                          divider\r\n                          component={Link}\r\n                          to={'/'}\r\n                          selected={drawerIndex===0}\r\n                          onClick={()=>{setDrawerIndex(0)}}\r\n                >\r\n                    <ListItemIcon>\r\n                        <FastfoodIcon style={{color:'white'}}/>\r\n                    </ListItemIcon>\r\n                    <ListItemText>\r\n                        Burger Builder\r\n                    </ListItemText>\r\n                </ListItem>\r\n                {props.isAuth?<ListItem style={{color:'white'}}\r\n                                        button\r\n                                        divider\r\n                                        component={Link}\r\n                                        to={'/orders'}\r\n                                        selected={drawerIndex===1}\r\n                                        onClick={()=>{setDrawerIndex(1)}}\r\n                >\r\n                    <ListItemIcon>\r\n                        <ListAltIcon style={{color:'white'}}/>\r\n                    </ListItemIcon>\r\n                    <ListItemText>\r\n                        Order\r\n                    </ListItemText>\r\n                </ListItem>:null}\r\n                {!props.isAuth?<ListItem style={{color:'white'}}\r\n                                         button\r\n                                         divider\r\n                                         component={Link}\r\n                                         to={'/auth'}\r\n                                         selected={drawerIndex===2}\r\n                                         onClick={()=>{setDrawerIndex(2)}}\r\n                >\r\n                    <ListItemIcon>\r\n                        <VpnKeyIcon style={{color:'white'}}/>\r\n                    </ListItemIcon>\r\n                    <ListItemText>\r\n                        Auth\r\n                    </ListItemText>\r\n                </ListItem>:null}\r\n                {props.isAuth?<ListItem style={{color:'white',background:'#FF4500'}} button divider component={Link} to={'/auth'} onClick={props.logout}>\r\n                    <ListItemIcon>\r\n                        <MeetingRoomIcon style={{color:'white'}}/>\r\n                    </ListItemIcon>\r\n                    <ListItemText>\r\n                        Logout\r\n                    </ListItemText>\r\n                </ListItem>:null}\r\n            </List>\r\n        </SwipeableDrawer>\r\n    </React.Fragment>\r\n\r\n    const toggle=<React.Fragment>\r\n        <IconButton style={{marginLeft:'auto'}} onClick={()=>{props.openDrawer()}}>\r\n            <MenuIcon style={{height:'50px',width:'50px'}}/>\r\n        </IconButton>\r\n    </React.Fragment>\r\n\r\n    const tabs=<React.Fragment>\r\n        <Tabs className={classes.tabs} value={index} onChange={changeHandler}>\r\n            <Tab label={'Burger Builder'} className={classes.tab} component={Link} to={'/'} onClick={redirectHandler}/>\r\n            {props.token?<Tab label={'Orders'} className={classes.tab} component={Link} to={'/orders'}/>:null}\r\n            {!props.token?<Tab label={'Auth'} className={classes.tab} component={Link} to={'/auth'}/>:null}\r\n            {props.isAuth?<Tab label={'Logout'} onClick={()=>{props.logout();logoutHandler()}} className={classes.tab}/> :null}\r\n        </Tabs>\r\n    </React.Fragment>\r\n\r\n    return (\r\n            <div style={{display:'flex',flexDirection:'column'}}>\r\n                {authRedirect}\r\n                <AppBar position={'sticky'}>\r\n                    <Toolbar>\r\n                        <img src={burgerIcon} alt=\"burger-icon\" className={classes.burgerIcon}/>\r\n                        {match?drawer:tabs}\r\n                        {match?toggle:null}\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        token:state.auth.token,\r\n        isAuth:state.auth.token!=null,\r\n        drawer:state.burgerBuilder.drawer\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        logout:()=>{dispatch(logout())},\r\n        openDrawer:()=>{dispatch(action.openDrawer())},\r\n        closeDrawer:()=>{dispatch(action.closeDrawer())}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Navigation);","import * as actionType from './actionType'\r\nimport axios from 'axios'\r\n\r\nexport const addMeat=(meat)=>{\r\n    return{\r\n        type:actionType.ADD_MEAT,\r\n        name:meat,\r\n    }\r\n}\r\n\r\nexport const addBacon=(bacon)=>{\r\n    return{\r\n        type:actionType.ADD_BACON,\r\n        name:bacon\r\n    }\r\n}\r\n\r\nexport const addCheese=(cheese)=>{\r\n    return{\r\n        type:actionType.ADD_CHEESE,\r\n        name:cheese\r\n    }\r\n}\r\n\r\nexport const addSalad=(salad)=>{\r\n    return{\r\n        type:actionType.ADD_SALAD,\r\n        name:salad\r\n    }\r\n}\r\n\r\nexport const removeMeat=(meat)=>{\r\n    return{\r\n        type:actionType.REMOVE_MEAT,\r\n        name:meat\r\n    }\r\n}\r\n\r\nexport const removeBacon=(bacon)=>{\r\n    return{\r\n        type:actionType.REMOVE_MEAT,\r\n        name:bacon\r\n    }\r\n}\r\n\r\nexport const removeCheese=(cheese)=>{\r\n    return{\r\n        type:actionType.REMOVE_MEAT,\r\n        name:cheese\r\n    }\r\n}\r\n\r\nexport const removeSalad=(salad)=>{\r\n    return{\r\n        type:actionType.REMOVE_MEAT,\r\n        name:salad\r\n    }\r\n}\r\n\r\nexport const fetchIngredientsSuccess=(ingredients)=>{\r\n    return{\r\n        type:actionType.FETCH_INGREDIENTS_SUCCESS,\r\n        ingredients:ingredients\r\n    }\r\n}\r\n\r\nexport const fetchIngredientsFailed=()=>{\r\n    return{\r\n        type:actionType.FETCH_INGREDIENTS_FAILED\r\n    }\r\n}\r\n\r\nexport const fetchIngredients=()=>{\r\n    return (dispatch)=>{\r\n        axios.get('https://creat-burger.firebaseio.com/ingredients.json').then((response)=>{\r\n            dispatch(fetchIngredientsSuccess(response.data))\r\n        }).catch((error)=>{\r\n            dispatch(fetchIngredientsFailed(error))\r\n        })\r\n    }\r\n}\r\n\r\nexport const sendOrderStart=()=>{\r\n    return{\r\n        type:actionType.SEND_ORDER_START\r\n    }\r\n}\r\n\r\nexport const sendOrderSuccess=(orderData)=>{\r\n    return{\r\n        type:actionType.SEND_ORDER_SUCCESS,\r\n        orderData:orderData\r\n    }\r\n}\r\n\r\nexport const sendOrderFailed=()=>{\r\n    return{\r\n        type:actionType.SEND_ORDER_FAILED\r\n    }\r\n}\r\n\r\nexport const sendOrder=(orderData,token)=>{\r\n    return (dispatch)=>{\r\n        dispatch(sendOrderStart())\r\n        axios.post('https://creat-burger.firebaseio.com/order2.json?auth='+token,orderData).then((response)=>{\r\n            dispatch(sendOrderSuccess(response.data))\r\n        }).catch((error)=>{\r\n            dispatch(sendOrderFailed(error))\r\n        })\r\n    }\r\n}\r\n\r\nexport const openContact=()=>{\r\n    return{\r\n        type:actionType.OPEN_CONTACT\r\n    }\r\n}\r\n\r\nexport const closeContact=()=>{\r\n    return{\r\n        type:actionType.CLOSE_CONTACT\r\n    }\r\n}\r\n\r\nexport const openModal=()=>{\r\n    return{\r\n        type:actionType.OPEN_MODAL\r\n    }\r\n}\r\n\r\nexport const closeModal=()=>{\r\n    return{\r\n        type:actionType.CLOSE_MODAL\r\n    }\r\n}\r\n\r\nexport const closeMessage=()=>{\r\n    return{\r\n        type:actionType.CLOSE_MESSAGE\r\n    }\r\n}\r\n\r\nexport const loginMessage=()=>{\r\n    return{\r\n        type:actionType.LOGIN_MESSAGE\r\n    }\r\n}\r\n\r\nexport const closeLoginTip=()=>{\r\n    return{\r\n        type:actionType.CLOSE_LOGIN_MESSAGE\r\n    }\r\n}\r\n\r\nexport const openDrawer=()=>{\r\n    return{\r\n        type:actionType.OPEN_DRAWER\r\n    }\r\n}\r\n\r\nexport const closeDrawer=()=>{\r\n    return{\r\n        type:actionType.CLOSE_DRAWER\r\n    }\r\n}\r\n","import createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\r\n\r\nconst brown='#8B4513'\r\nconst lightBrown='#D2691E'\r\nexport const theme=createMuiTheme({\r\n    palette:{\r\n        common:{\r\n            brown:brown,\r\n            lightBrown:lightBrown\r\n        },\r\n        primary:{\r\n            main:brown\r\n        },\r\n        secondary:{\r\n            main:lightBrown\r\n        }\r\n    }\r\n})","import React,{useState} from 'react';\r\nimport classes from './burgercontrols.module.css'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {connect} from 'react-redux'\r\nimport {closeLoginTip, loginMessage} from \"../../../store/action\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nfunction Burgercontrols(props) {\r\n    return (\r\n        <div className={classes.wrapper} style={{fontWeight:'bold'}}>\r\n            Total Price: {props.price.toFixed(2)}\r\n            <Grid container className={classes.margin} alignItems={'center'} justify={'center'}>\r\n                <Grid item style={{marginRight:'50px'}}>\r\n                    <Grid container direction={'column'} spacing={6}>\r\n                        <Grid item>\r\n                            Salad\r\n                        </Grid>\r\n                        <Grid item>\r\n                            Cheese\r\n                        </Grid>\r\n                        <Grid item>\r\n                            Bacon\r\n                        </Grid>\r\n                        <Grid item>\r\n                            Meat\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Grid container direction={'column'} spacing={4}>\r\n                        <Grid item>\r\n                            <Button variant={'contained'} color={'primary'} style={{minWidth:'6em'}} onClick={props.addSalad}>+</Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant={'contained'} color={'primary'} style={{minWidth:'6em'}} onClick={props.addCheese}>+</Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant={'contained'} color={'primary'} style={{minWidth:'6em'}} onClick={props.addBacon}>+</Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant={'contained'} color={'primary'} style={{minWidth:'6em'}} onClick={props.addMeat}>+</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item style={{marginLeft:'20px'}}>\r\n                    <Grid container direction={'column'} spacing={4}>\r\n                        <Grid item>\r\n                            <Button variant={'contained'} color={'primary'} style={{minWidth:'6em'}} onClick={props.removeSalad} disabled={props.disable['salad']}>-</Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant={'contained'} color={'primary'} style={{minWidth:'6em'}} onClick={props.removeCheese} disabled={props.disable['cheese']}>-</Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant={'contained'} color={'primary'} style={{minWidth:'6em'}} onClick={props.removeBacon} disabled={props.disable['bacon']}>-</Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant={'contained'} color={'primary'} style={{minWidth:'6em'}} onClick={props.removeMeat} disabled={props.disable['meat']}>-</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Button variant={'contained'} style={{backgroundColor:'#FFD700',fontWeight:'bold',marginTop:'30px'}} onClick={props.isAuth?props.openModal:props.openMessage}>Order Now</Button>\r\n            <Snackbar open={props.loginMessage} anchorOrigin={{horizontal:'center',vertical:'top'}} autoHideDuration={6000}>\r\n                <Alert severity={'warning'} onClose={props.closeMessage}>\r\n                    Please login to your account first!\r\n                </Alert>\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        isAuth:state.auth.token!=null,\r\n        loginMessage:state.burgerBuilder.loginTip\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        openMessage:()=>{dispatch(loginMessage())},\r\n        closeMessage:()=>{dispatch(closeLoginTip())}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Burgercontrols);","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nfunction Modal(props) {\r\n    return (\r\n        <React.Fragment>\r\n                <Dialog open={props.open} onClose={props.closeModal} style={{textAlign:'center'}} fullWidth>\r\n                    <DialogTitle>\r\n                        Here is your delicious burger:\r\n                    </DialogTitle>\r\n                    <Grid container direction={'column'}>\r\n                        <Grid item style={{marginBottom:'10px'}}>\r\n                            <span>Salad: </span> {props.salad}\r\n                        </Grid>\r\n                        <Grid item style={{marginBottom:'10px'}}>\r\n                            <span>Cheese: </span> {props.cheese}\r\n                        </Grid>\r\n                        <Grid item style={{marginBottom:'10px'}}>\r\n                            <span>Meat: </span> {props.meat}\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <span>Bacon: </span> {props.bacon}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <DialogTitle>\r\n                        Price: {props.price.toFixed(2)}\r\n                    </DialogTitle>\r\n                    <Grid container justify={'center'} style={{marginBottom:'20px'}} spacing={3}>\r\n                        <Grid item>\r\n                            <Button variant={'outlined'} style={{borderColor:'green',color:'green'}} onClick={props.openContact}>Continue</Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant={'outlined'} style={{borderColor:'red',color:'red'}} onClick={props.closeModal}>Cancel</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Dialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& > * + *': {\r\n            marginLeft: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function CircularIndeterminate() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root} style={{justifyContent:'center',paddingTop:'10%'}}>\r\n            <CircularProgress color=\"secondary\" style={{height:'5em',width:'5em'}}/>\r\n        </div>\r\n    );\r\n}","import React,{useState} from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {connect} from 'react-redux'\r\nimport * as action from '../../../store/action/index'\r\nimport Loader from \"../Loader/Loader\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nfunction Contact(props) {\r\n    const[method,setMethod]=useState('Fastest')\r\n    const [name,setName]=useState(null)\r\n    const [email,setEmail]=useState(null)\r\n    const [street,setStreet]=useState(null)\r\n    const [zipcode,setZipcode]=useState(null)\r\n    const [country,setCountry]=useState(null)\r\n    const changeHandler=(event)=>{\r\n        setMethod(event.target.value)\r\n    }\r\n    const nameChangeHandler=(event)=>{\r\n        setName(event.target.value)\r\n        console.log(name)\r\n    }\r\n    const emailChangeHandler=(event)=>{\r\n        setEmail(event.target.value)\r\n    }\r\n    const streetChangeHandler=(event)=>{\r\n        setStreet(event.target.value)\r\n    }\r\n    const zipcodeChangeHandler=(event)=>{\r\n        setZipcode(event.target.value)\r\n    }\r\n    const countryChangeHandler=(event)=>{\r\n        setCountry(event.target.value)\r\n    }\r\n    const customerData={\r\n        name,\r\n        email,\r\n        street,\r\n        zipcode,\r\n        country,\r\n        method\r\n    }\r\n    const orderData={\r\n        ingredients:props.ing,\r\n        orderData:customerData,\r\n        price:props.price\r\n    }\r\n    const sendHandler=()=>{\r\n        props.sendOrder(orderData,props.token)\r\n    }\r\n    let content=<div>\r\n        <DialogTitle>\r\n            Enter Your Contact Data\r\n        </DialogTitle>\r\n        <DialogContent>\r\n            <TextField margin={'dense'} label={'Your Name'} fullWidth variant={'outlined'} onChange={nameChangeHandler}/>\r\n            <TextField margin={'dense'} label={'Your Email'} fullWidth variant={'outlined'} onChange={emailChangeHandler}/>\r\n            <TextField margin={'dense'} label={'Street'} fullWidth variant={'outlined'} onChange={streetChangeHandler}/>\r\n            <TextField margin={'dense'} label={'Zip Code'} fullWidth variant={'outlined'} onChange={zipcodeChangeHandler}/>\r\n            <TextField margin={'dense'} label={'Country'} fullWidth variant={'outlined'} onChange={countryChangeHandler}/>\r\n            <Select value={method} fullWidth style={{marginTop:'10px',height:'40px'}} onChange={changeHandler} variant={'outlined'}>\r\n                <MenuItem value={'Fastest'}>Fastest</MenuItem>\r\n                <MenuItem value={'Cheapest'}>Cheapest</MenuItem>\r\n            </Select>\r\n            <div style={{marginTop:'20px',textAlign:'center'}}>\r\n                <Button style={{fontWeight:'bold',color:'green'}} onClick={sendHandler}>Order</Button>\r\n            </div>\r\n        </DialogContent>\r\n    </div>\r\n\r\n    if(props.loading){\r\n        content=<div style={{height:'446px',width:'600px'}}>\r\n            <div style={{paddingTop:'6.6em'}}>\r\n                <Loader/>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Dialog open={props.openContact} onClose={props.closeContact}>\r\n                {content}\r\n            </Dialog>\r\n            <Snackbar open={props.openMessage} onClose={props.closeMessage} anchorOrigin={{vertical:'top',horizontal:'center'}} autoHideDuration={6000}>\r\n                <Alert severity={'success'} onClose={props.closeMessage}>\r\n                    We have received your order!\r\n                </Alert>\r\n            </Snackbar>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        ing:state.burgerBuilder.ingredients,\r\n        loading:state.burgerBuilder.loading,\r\n        price:state.burgerBuilder.totalPrice,\r\n        openMessage:state.burgerBuilder.openMessage,\r\n        token:state.auth.token\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        sendOrder:(orderData,token)=>{dispatch(action.sendOrder(orderData,token))},\r\n        closeMessage:()=>{dispatch(action.closeMessage())}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Contact);","import React from 'react';\r\nimport classes from './ingredients.module.css'\r\nimport PropType from 'prop-types'\r\n\r\nfunction Ingredients(props) {\r\n    let ingredients=null\r\n    switch (props.type){\r\n        case('salad'):\r\n            ingredients=<div className={classes.Salad}></div>\r\n            break;\r\n        case('meat'):\r\n            ingredients=<div className={classes.Meat}></div>\r\n            break;\r\n        case('cheese'):\r\n            ingredients=<div className={classes.Cheese}></div>\r\n            break;\r\n        case('bacon'):\r\n            ingredients=<div className={classes.Bacon}></div>\r\n            break;\r\n        default:ingredients=null\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {ingredients}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nIngredients.PropType={\r\n    type: PropType.string.isRequired\r\n}\r\n\r\nexport default Ingredients;","import React from 'react';\r\nimport classes from './burger.module.css'\r\nimport Ingredients from \"../ingredients/ingredients\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nfunction Burger(props) {\r\n    let ingredient=Object.keys(props.ingredients).map((igKey)=>{\r\n        return [...Array(props.ingredients[igKey])].map((_,index)=>{\r\n            return <Ingredients key={igKey+index} type={igKey}/>\r\n        })\r\n    }).reduce((arr,el)=>{\r\n        return arr.concat(el)\r\n    },[]);\r\n    if(ingredient.length===0){\r\n        ingredient=<p>Please start adding ingredients</p>\r\n    }\r\n\r\n    return (\r\n            <React.Fragment>\r\n                <CssBaseline/>\r\n                <div className={classes.Burger}>\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}/>\r\n                        <div className={classes.Seeds2}/>\r\n                    </div>\r\n                    {ingredient}\r\n                    <div className={classes.BreadBottom}/>\r\n                </div>\r\n            </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Burger;","import Burgercontrols from \"./burgercontrols/burgercontrols\";\r\nimport Modal from \"./modal/modal\";\r\nimport React, {Component} from 'react';\r\nimport Contact from \"./contact/contact\";\r\nimport Loader from \"./Loader/Loader\";\r\nimport Burger from \"./burger/burger\";\r\nimport {connect} from \"react-redux\";\r\nimport * as action from '../../store/action/index'\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nclass Burgerbuilder extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchIngredients()\r\n    }\r\n\r\n    render() {\r\n        const disable={...this.props.ing}\r\n        for(let key in disable){\r\n            disable[key]=disable[key]<=0\r\n        }\r\n\r\n        let mainPage=<Loader/>\r\n        if(this.props.ing){\r\n            mainPage=<React.Fragment>\r\n                    <Burger ingredients={this.props.ing}/>\r\n                <Burgercontrols\r\n                    addMeat={()=>this.props.addMeat('meat')}\r\n                    addBacon={()=>this.props.addBacon('bacon')}\r\n                    addSalad={()=>this.props.addSalad('salad')}\r\n                    addCheese={()=>this.props.addCheese('cheese')}\r\n                    removeMeat={()=>this.props.removeMeat('meat')}\r\n                    removeBacon={()=>this.props.removeBacon('bacon')}\r\n                    removeSalad={()=>this.props.removeSalad('salad')}\r\n                    removeCheese={()=>this.props.removeCheese('cheese')}\r\n                    disable={disable}\r\n                    price={this.props.totalPrice}\r\n                    openModal={this.props.openModal}\r\n                />\r\n                <Modal open={this.props.open}\r\n                       closeModal={this.props.closeModal}\r\n                       salad={this.props.ing.salad}\r\n                       cheese={this.props.ing.cheese}\r\n                       meat={this.props.ing.meat}\r\n                       bacon={this.props.ing.bacon}\r\n                       price={this.props.totalPrice}\r\n                       openContact={this.props.openContactF}\r\n                />\r\n                <Contact openContact={this.props.openContact} closeContact={this.props.closeContactF}/>\r\n            </React.Fragment>\r\n        }\r\n\r\n        return (\r\n                mainPage\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        ing:state.burgerBuilder.ingredients,\r\n        totalPrice:state.burgerBuilder.totalPrice,\r\n        openContact:state.burgerBuilder.openContact,\r\n        open:state.burgerBuilder.open,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        addMeat:(name)=>{dispatch(action.addMeat(name))},\r\n        addBacon:(name)=>{dispatch(action.addBacon(name))},\r\n        addCheese:(name)=>{dispatch(action.addCheese(name))},\r\n        addSalad:(name)=>{dispatch(action.addSalad(name))},\r\n        removeMeat:(name)=>{dispatch(action.removeMeat(name))},\r\n        removeBacon:(name)=>{dispatch(action.removeBacon(name))},\r\n        removeCheese:(name)=>{dispatch(action.removeCheese(name))},\r\n        removeSalad:(name)=>{dispatch(action.removeSalad(name))},\r\n        fetchIngredients:()=>{dispatch(action.fetchIngredients())},\r\n        openContactF:()=>{dispatch(action.openContact())},\r\n        closeContactF:()=>{dispatch(action.closeContact())},\r\n        openModal:()=>{dispatch(action.openModal())},\r\n        closeModal:()=>{dispatch(action.closeModal())},\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Burgerbuilder);\r\n\r\n","import React,{useEffect} from 'react';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {connect} from 'react-redux'\r\nimport * as action from '../../../store/action/index'\r\nimport Loader from \"../../burgerbuilder/Loader/Loader\";\r\n\r\nfunction Order(props) {\r\n\r\n    useEffect(()=>{\r\n            props.fetchOrder(props.token)\r\n    },[])\r\n\r\n    let content=<div>\r\n        {props.orderData.map((ingredients)=>{\r\n            return <TableContainer component={Paper} style={{width:'60%',margin:'6% auto'}}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {Array(ingredients.ingredients).map((ing)=>{\r\n                            return <TableRow>\r\n                                <TableCell>\r\n                                    Ingredients:\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    Meat: {ing.meat}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    Salad: {ing.salad}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    Cheese: {ing.cheese}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    Bacon: {ing.bacon}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        })}\r\n                        <TableRow>\r\n                            <TableCell>\r\n                                Price: <span style={{fontWeight:'bold'}}>USD {ingredients.price.toFixed(2)}</span>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        })}\r\n    </div>\r\n        if(props.loading && props.token){\r\n            content=<Loader/>\r\n        }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {content}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        orderData:state.order.order,\r\n        loading:state.order.loading,\r\n        token:state.auth.token\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        fetchOrder:(token)=>{dispatch(action.fetchOrder(token))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Order);","import * as actionType from '../action/actionType'\r\nimport axios from 'axios'\r\n\r\nexport const fetchOrderStart=()=>{\r\n    return{\r\n        type:actionType.FETCH_ORDER_START\r\n    }\r\n}\r\n\r\nexport const fetchOrderSuccess=(orderData)=>{\r\n    return{\r\n        type:actionType.FETCH_ORDER_SUCCESS,\r\n        orderData:orderData\r\n    }\r\n}\r\n\r\nexport const fetchOrderFailed=()=>{\r\n    return{\r\n        type:actionType.FETCH_ORDER_FAILED\r\n    }\r\n}\r\n\r\nexport const fetchOrder=(token)=>{\r\n    return (dispatch)=>{\r\n        dispatch(fetchOrderStart())\r\n        axios.get('https://creat-burger.firebaseio.com/order2.json?auth='+token).then((response)=>{\r\n            const orderData=[]\r\n            for(let key in response.data){\r\n                orderData.push({\r\n                    ...response.data[key],\r\n                    id:key\r\n                })\r\n            }\r\n            dispatch(fetchOrderSuccess(orderData))\r\n        }).catch((error)=>{\r\n            dispatch(fetchOrderFailed(error))\r\n        })\r\n    }\r\n}","import React,{useState} from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {connect} from 'react-redux'\r\nimport * as action from '../../../store/action/index'\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Loader from \"../../burgerbuilder/Loader/Loader\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nfunction Signupform(props) {\r\n    const[email,setEmail]=useState(null)\r\n    const[password,setPassword]=useState(null)\r\n\r\n    const emailHandler=(event)=>{\r\n        setEmail(event.target.value)\r\n    }\r\n\r\n    const passwordHandler=(event)=>{\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    let content=<React.Fragment>\r\n        <DialogContent>\r\n            <DialogTitle style={{textAlign:'center',marginBottom:'1em'}}>\r\n                <Typography component='h1' variant='h5'>\r\n                    Create your account\r\n                </Typography>\r\n\r\n            </DialogTitle>\r\n            <DialogContentText>\r\n                <TextField fullWidth variant={'outlined'} label={'Setup email'} autoFocus value={email} onChange={emailHandler}/>\r\n            </DialogContentText>\r\n            <DialogContentText>\r\n                <TextField fullWidth variant={'outlined'} label={'Setup password'} value={password} onChange={passwordHandler}/>\r\n            </DialogContentText>\r\n        </DialogContent>\r\n        <Button variant={'contained'} color={'primary'} style={{width:'30%',margin:'10px auto'}} onClick={()=>props.authUp(email,password)}>Submit</Button>\r\n    </React.Fragment>\r\n    if(props.loading){\r\n        content=<div style={{width:'444px',height:'298px',paddingTop:'4.5em'}}>\r\n            <Loader/>\r\n        </div>\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n                <Dialog open={props.open} onClose={props.closeForm} fullWidth maxWidth={'xs'}>\r\n                    {content}\r\n                </Dialog>\r\n            <Snackbar open={props.successMessage} onClose={props.closeMessage} autoHideDuration={6000} anchorOrigin={{horizontal:'center',vertical:'top'}}>\r\n                <Alert severity={'success'} onClose={props.closeMessage}>\r\n                    Account created!\r\n                </Alert>\r\n            </Snackbar>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        open:state.auth.open,\r\n        loading:state.auth.loading,\r\n        successMessage:state.auth.successMessage,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        closeForm:()=>{dispatch(action.closeSignupForm())},\r\n        authUp:(email,password)=>{dispatch(action.authUp(email,password))},\r\n        closeMessage:()=>{dispatch(action.closeSuccessMessage())},\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Signupform);","import React,{useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport * as action from '../../store/action/index'\r\nimport {connect} from 'react-redux'\r\nimport Signupform from \"./signupform/signupform\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Loader from \"../burgerbuilder/Loader/Loader\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\nfunction Auth(props) {\r\n    const classes = useStyles();\r\n    const [email,setEmail]=useState(null)\r\n    const [password,setPassword]=useState(null)\r\n\r\n    const emailHandler=(event)=>{\r\n        setEmail(event.target.value)\r\n    }\r\n\r\n    const passwordHandler=(event)=>{\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    let errorMessage=null\r\n    if(props.error){\r\n        errorMessage=props.error.message\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        value={email}\r\n                        onChange={emailHandler}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        value={password}\r\n                        onChange={passwordHandler}\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                        label=\"Remember me\"\r\n                    />\r\n                    <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={()=>{props.authIn(email,password);props.closeLoginTip()}}\r\n                    >\r\n                        Sign in\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                Forgot password?\r\n                            </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Link href=\"#\" variant=\"body2\" onClick={props.openForm}>\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Signupform/>\r\n            <Snackbar open={props.loginMessage} onClose={props.closeLoginMessage} anchorOrigin={{horizontal:'center',vertical:'top'}} autoHideDuration={6000}>\r\n                <Alert severity={'success'} onClose={props.closeLoginMessage}>\r\n                    {props.isAuth?'Login success!':'Logout success!'}\r\n                </Alert>\r\n            </Snackbar>\r\n            <Backdrop open={props.backDrop} style={{zIndex:'2000'}}>\r\n                <div style={{marginBottom:'6em'}}>\r\n                    <Loader style={{zIndex:'2001'}}/>\r\n                </div>\r\n            </Backdrop>\r\n            <Snackbar open={props.openError} onClose={props.closeErrorMessage} anchorOrigin={{horizontal:'center',vertical:'top'}} autoHideDuration={6000}>\r\n                <Alert severity={'error'} onClose={props.closeErrorMessage}>\r\n                    {errorMessage}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        loading:state.auth.loading,\r\n        id:state.auth.id,\r\n        loginMessage:state.auth.loginMessage,\r\n        error:state.auth.error,\r\n        openError:state.auth.openError,\r\n        backDrop:state.auth.openBackDrop,\r\n        isAuth:state.auth.token!=null\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        authIn:(email,password)=>{dispatch(action.authIn(email,password))},\r\n        openForm:()=>{dispatch(action.openSignupForm())},\r\n        closeLoginMessage:()=>{dispatch(action.closeLoginMessage())},\r\n        closeErrorMessage:()=>{dispatch(action.closeErrorMessage())},\r\n        closeLoginTip:()=>{dispatch(action.closeLoginTip())}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Auth)","import Navigation from \"./components/navigation/navigation\";\nimport {ThemeProvider} from \"@material-ui/styles\";\nimport {theme} from '../src/components/theme/theme'\nimport {BrowserRouter,Route,Switch} from \"react-router-dom\";\nimport Burgerbuilder from \"./components/burgerbuilder/burgerbuilder\";\nimport Order from \"./components/orderpage/order/order\";\nimport Auth from \"./components/auth/auth\";\nimport {connect} from 'react-redux'\nimport * as action from './store/action/index'\nimport React, {Component} from 'react';\n\nclass App extends Component {\n    render() {\n        this.props.autoLogin()\n        return (\n                <BrowserRouter>\n                    <ThemeProvider theme={theme}>\n                        <div>\n                            <Navigation/>\n                            <Switch>\n                                <Route path={'/auth'} component={Auth}/>\n                                <Route path={'/orders'} component={Order}/>\n                                <Route path={'/'} component={Burgerbuilder}/>\n                            </Switch>\n                        </div>\n                    </ThemeProvider>\n                </BrowserRouter>\n        );\n    }\n}\n\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n        autoLogin:()=>{dispatch(action.autoLogin())}\n    }\n}\n\nexport default connect(null,mapDispatchToProps)(App);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionType from '../action/actionType'\r\n\r\nconst initialState={\r\n    ingredients: null,\r\n    totalPrice:6,\r\n    error:false,\r\n    loading:false,\r\n    openContact:false,\r\n    open:false,\r\n    openMessage:false,\r\n    loginTip:false,\r\n    drawer:false\r\n}\r\nconst ingredientsPrice={\r\n    bacon:2,\r\n    cheese:1.5,\r\n    meat:2,\r\n    salad:1.5\r\n}\r\n\r\nconst burgerBuilder=(state=initialState,action)=>{\r\n    switch (action.type){\r\n        case(actionType.ADD_MEAT):\r\n            return{\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.name]:state.ingredients[action.name]+1\r\n                },\r\n                totalPrice: state.totalPrice+ingredientsPrice[action.name]\r\n            }\r\n        case(actionType.ADD_BACON):\r\n            return{\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.name]:state.ingredients[action.name]+1\r\n                },\r\n                totalPrice: state.totalPrice+ingredientsPrice[action.name]\r\n            }\r\n        case(actionType.ADD_CHEESE):\r\n            return{\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.name]:state.ingredients[action.name]+1\r\n                },\r\n                totalPrice: state.totalPrice+ingredientsPrice[action.name]\r\n            }\r\n        case(actionType.ADD_SALAD):\r\n            return{\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.name]:state.ingredients[action.name]+1\r\n                },\r\n                totalPrice: state.totalPrice+ingredientsPrice[action.name]\r\n            }\r\n        case(actionType.REMOVE_MEAT):\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.name]:state.ingredients[action.name]-1\r\n                },\r\n                totalPrice: state.totalPrice-ingredientsPrice[action.name]\r\n            }\r\n        case(actionType.REMOVE_BACON):\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.name]:state.ingredients[action.name]-1\r\n                },\r\n                totalPrice: state.totalPrice-ingredientsPrice[action.name]\r\n            }\r\n        case(actionType.REMOVE_CHEESE):\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.name]:state.ingredients[action.name]-1\r\n                },\r\n                totalPrice: state.totalPrice-ingredientsPrice[action.name]\r\n            }\r\n        case(actionType.REMOVE_SALAD):\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.name]:state.ingredients[action.name]-1\r\n                },\r\n                totalPrice: state.totalPrice-ingredientsPrice[action.name]\r\n            }\r\n        case(actionType.FETCH_INGREDIENTS_SUCCESS):\r\n            return{\r\n                ...state,\r\n                ingredients:action.ingredients,\r\n                totalPrice:6\r\n            }\r\n        case(actionType.FETCH_INGREDIENTS_FAILED):\r\n            return{\r\n                ...state,\r\n                error:true\r\n            }\r\n        case(actionType.SEND_ORDER_START):\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case(actionType.SEND_ORDER_SUCCESS):\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n                openContact:false,\r\n                openMessage:true\r\n            }\r\n        case(actionType.SEND_ORDER_FAILED):\r\n            return{\r\n                ...state,\r\n                error:true,\r\n                openContact:false,\r\n                loading:false\r\n            }\r\n        case(actionType.OPEN_CONTACT):\r\n            return{\r\n                ...state,\r\n                openContact:true,\r\n                open:false\r\n            }\r\n        case(actionType.CLOSE_CONTACT):\r\n            return{\r\n                ...state,\r\n                openContact:false\r\n            }\r\n        case(actionType.OPEN_MODAL):\r\n            return{\r\n                ...state,\r\n                open:true\r\n            }\r\n        case(actionType.CLOSE_MODAL):\r\n            return{\r\n                ...state,\r\n                open:false\r\n            }\r\n        case(actionType.CLOSE_MESSAGE):\r\n            return{\r\n                ...state,\r\n                openMessage:false\r\n            }\r\n        case(actionType.LOGIN_MESSAGE):\r\n            return{\r\n                ...state,\r\n                loginTip:true\r\n            }\r\n        case (actionType.CLOSE_LOGIN_MESSAGE):\r\n            return{\r\n                ...state,\r\n                loginTip:false\r\n            }\r\n        case(actionType.OPEN_DRAWER):\r\n            return{\r\n                ...state,\r\n                drawer:true\r\n            }\r\n        case(actionType.CLOSE_DRAWER):\r\n            return{\r\n                ...state,\r\n                drawer:false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default burgerBuilder","import * as actionType from '../action/actionType'\r\n\r\nconst initialState={\r\n    order:[],\r\n    loading:true,\r\n    error:false\r\n}\r\n\r\nconst order=(state=initialState,action)=>{\r\n    switch (action.type){\r\n        case(actionType.FETCH_ORDER_START):\r\n            return{\r\n                ...state,\r\n                loading:true\r\n            }\r\n        case(actionType.FETCH_ORDER_SUCCESS):\r\n            return{\r\n                ...state,\r\n                order:action.orderData,\r\n                loading:false\r\n            }\r\n        case(actionType.FETCH_ORDER_FAILED):\r\n            return{\r\n                ...state,\r\n                error:true,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default order","import * as actionType from '../action/actionType'\r\n\r\nconst initialState={\r\n    id:null,\r\n    token:null,\r\n    loading:false,\r\n    open:false,\r\n    successMessage:false,\r\n    loginMessage:false,\r\n    error:null,\r\n    openError:false,\r\n    openBackDrop:false\r\n}\r\n\r\nconst auth=(state=initialState,action)=>{\r\n    switch (action.type){\r\n        case(actionType.AUTH_UP_START):\r\n            return{\r\n                ...state,\r\n                loading:true,\r\n            }\r\n        case(actionType.AUTH_IN_START):\r\n            return{\r\n                ...state,\r\n                openBackDrop:true\r\n            }\r\n        case(actionType.AUTH_UP_SUCCESS):\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n                open:false,\r\n                successMessage:true\r\n            }\r\n        case(actionType.AUTH_IN_SUCCESS):\r\n            return{\r\n                ...state,\r\n                id:action.id,\r\n                token:action.token,\r\n                loading:false,\r\n                loginMessage:true,\r\n                openBackDrop:false\r\n            }\r\n        case(actionType.AUTH_FAILED):\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n                error:action.error,\r\n                openError:true,\r\n                openBackDrop:false\r\n            }\r\n        case(actionType.OPEN_SIGNUP_FROM):\r\n            return{\r\n                ...state,\r\n                open:true\r\n            }\r\n        case(actionType.CLOSE_SIGNUP_FROM):\r\n            return{\r\n                ...state,\r\n                open:false\r\n            }\r\n        case(actionType.CLOSE_MESSAGE):\r\n            return{\r\n                ...state,\r\n                successMessage:false,\r\n                loginMessage:false\r\n            }\r\n        case(actionType.CLOSE_ERROR_MESSAGE):\r\n            return{\r\n                ...state,\r\n                openError:false\r\n            }\r\n        case(actionType.LOGOUT):\r\n            return{\r\n                ...state,\r\n                token:null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default auth","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore,applyMiddleware,combineReducers,compose} from \"redux\";\nimport burgerBuilder from \"./store/reducer/burgerBuilder\";\nimport thunk from \"redux-thunk\";\nimport {Provider} from \"react-redux\";\nimport order from \"./store/reducer/order\";\nimport auth from \"./store/reducer/auth\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst rootReducer=combineReducers({\n    burgerBuilder:burgerBuilder,\n    order:order,\n    auth:auth\n})\n\nconst store=createStore(rootReducer,composeEnhancers(\n    applyMiddleware(thunk)\n))\n\nconst app=<Provider store={store}>\n    <App />\n</Provider>\n\nReactDOM.render(app,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"burger_BreadBottom__1Sp9w\",\"BreadTop\":\"burger_BreadTop__1TeNe\",\"Seeds1\":\"burger_Seeds1__3mzOa\",\"Seeds2\":\"burger_Seeds2__3YKiM\",\"Meat\":\"burger_Meat__27aRo\",\"Cheese\":\"burger_Cheese__1ejzS\",\"Salad\":\"burger_Salad__2hbd7\",\"Bacon\":\"burger_Bacon__23yna\",\"Burger\":\"burger_Burger__JV9g-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"ingredients_BreadBottom__2E9Vj\",\"BreadTop\":\"ingredients_BreadTop__2rLZl\",\"Seeds1\":\"ingredients_Seeds1__2enZf\",\"Seeds2\":\"ingredients_Seeds2__bmZUz\",\"Meat\":\"ingredients_Meat__3JIiW\",\"Cheese\":\"ingredients_Cheese__3RfHA\",\"Salad\":\"ingredients_Salad__1FV0P\",\"Bacon\":\"ingredients_Bacon__HBI8u\",\"Burger\":\"ingredients_Burger__2GQrN\"};"],"sourceRoot":""}